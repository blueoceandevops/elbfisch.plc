/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.jpac.plc.s7.symaddr.lexer;

import java.io.*;
import org.jpac.plc.s7.symaddr.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        int middle = (low + high) / 2;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStructsym(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStructendsym(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVarsym(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBool(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TByte(text, line, pos); }
    Token new5(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TChar(text, line, pos); }
    Token new6(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWord(text, line, pos); }
    Token new7(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDword(text, line, pos); }
    Token new8(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInt(text, line, pos); }
    Token new9(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDint(text, line, pos); }
    Token new10(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReal(text, line, pos); }
    Token new11(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(text, line, pos); }
    Token new12(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUdt(text, line, pos); }
    Token new13(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TS5time(text, line, pos); }
    Token new14(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTime(text, line, pos); }
    Token new15(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTimeofday(text, line, pos); }
    Token new16(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDate(text, line, pos); }
    Token new17(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDateandtime(text, line, pos); }
    Token new18(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TArray(text, line, pos); }
    Token new19(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOf(text, line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDotdot(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLParen(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRParen(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLSquarebracket(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRSquarebracket(line, pos); }
    Token new29(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }
    Token new30(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSign(text, line, pos); }
    Token new31(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumber(text, line, pos); }
    Token new32(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTraditionalComment(text, line, pos); }
    Token new33(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocumentationComment(text, line, pos); }
    Token new34(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEndOfLineComment(text, line, pos); }
    Token new35(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntialization(text, line, pos); }
    Token new36(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlanks(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {40, 40, 5}, {41, 41, 6}, {43, 43, 7}, {44, 44, 8}, {45, 45, 7}, {46, 46, 9}, {47, 47, 10}, {48, 57, 11}, {58, 58, 12}, {59, 59, 13}, {65, 65, 14}, {66, 66, 15}, {67, 67, 16}, {68, 68, 17}, {69, 69, 18}, {70, 72, 19}, {73, 73, 20}, {74, 78, 19}, {79, 79, 21}, {80, 81, 19}, {82, 82, 22}, {83, 83, 23}, {84, 84, 24}, {85, 85, 25}, {86, 86, 26}, {87, 87, 27}, {88, 90, 19}, {91, 91, 28}, {93, 93, 29}, {95, 95, 19}, {97, 97, 30}, {98, 98, 31}, {99, 99, 32}, {100, 100, 33}, {101, 101, 34}, {102, 104, 19}, {105, 105, 35}, {106, 110, 19}, {111, 111, 36}, {112, 113, 19}, {114, 114, 37}, {115, 115, 38}, {116, 116, 39}, {117, 117, 40}, {118, 118, 41}, {119, 119, 42}, {120, 122, 19}, },
            {},
            {},
            {{10, 10, 43}, },
            {},
            {{42, 42, 44}, },
            {},
            {},
            {},
            {{46, 46, 45}, },
            {{47, 47, 46}, },
            {{48, 57, 11}, },
            {{61, 61, 47}, },
            {},
            {{48, 57, 48}, {65, 81, 49}, {82, 82, 50}, {83, 90, 49}, {95, 95, 49}, {97, 113, 49}, {114, 114, 51}, {115, 122, 49}, },
            {{48, 57, 48}, {65, 78, 49}, {79, 79, 52}, {80, 88, 49}, {89, 89, 53}, {90, 90, 49}, {95, 95, 49}, {97, 110, 49}, {111, 111, 54}, {112, 120, 49}, {121, 121, 55}, {122, 122, 49}, },
            {{48, 57, 48}, {65, 71, 49}, {72, 72, 56}, {73, 90, 49}, {95, 95, 49}, {97, 103, 49}, {104, 104, 57}, {105, 122, 49}, },
            {{48, 57, 48}, {65, 65, 58}, {66, 72, 49}, {73, 73, 59}, {74, 86, 49}, {87, 87, 60}, {88, 90, 49}, {95, 95, 49}, {97, 97, 61}, {98, 104, 49}, {105, 105, 62}, {106, 118, 49}, {119, 119, 63}, {120, 122, 49}, },
            {{48, 57, 48}, {65, 77, 49}, {78, 78, 64}, {79, 90, 49}, {95, 95, 49}, {97, 109, 49}, {110, 110, 65}, {111, 122, 49}, },
            {{48, 57, 48}, {65, 90, 49}, {95, 95, 49}, {97, 122, 49}, },
            {{48, 77, -20}, {78, 78, 66}, {79, 109, -20}, {110, 110, 67}, {111, 122, 49}, },
            {{48, 57, 48}, {65, 69, 49}, {70, 70, 68}, {71, 90, 49}, {95, 95, 49}, {97, 101, 49}, {102, 102, 69}, {103, 122, 49}, },
            {{48, 57, 48}, {65, 68, 49}, {69, 69, 70}, {70, 90, 49}, {95, 95, 49}, {97, 100, 49}, {101, 101, 71}, {102, 122, 49}, },
            {{48, 52, 48}, {53, 53, 72}, {54, 57, 48}, {65, 83, 49}, {84, 84, 73}, {85, 90, 49}, {95, 95, 49}, {97, 115, 49}, {116, 116, 74}, {117, 122, 49}, },
            {{48, 57, 48}, {65, 72, 49}, {73, 73, 75}, {74, 90, 49}, {95, 95, 49}, {97, 104, 49}, {105, 105, 76}, {106, 122, 49}, },
            {{48, 57, 48}, {65, 67, 49}, {68, 68, 77}, {69, 90, 49}, {95, 95, 49}, {97, 99, 49}, {100, 100, 78}, {101, 122, 49}, },
            {{48, 57, 48}, {65, 65, 79}, {66, 90, 49}, {95, 95, 49}, {97, 97, 80}, {98, 122, 49}, },
            {{48, 78, -17}, {79, 79, 81}, {80, 90, 49}, {95, 110, -17}, {111, 111, 82}, {112, 122, 49}, },
            {},
            {},
            {{48, 122, -16}, },
            {{48, 122, -17}, },
            {{48, 122, -18}, },
            {{48, 122, -19}, },
            {{48, 122, -20}, },
            {{48, 122, -22}, },
            {{48, 122, -23}, },
            {{48, 122, -24}, },
            {{48, 122, -25}, },
            {{48, 122, -26}, },
            {{48, 122, -27}, },
            {{48, 122, -28}, },
            {{48, 122, -29}, },
            {},
            {{0, 9, 83}, {10, 10, 84}, {11, 12, 83}, {13, 13, 85}, {14, 41, 83}, {42, 42, 86}, {43, 65535, 83}, },
            {},
            {{0, 9, 87}, {10, 10, 88}, {11, 12, 87}, {13, 13, 89}, {14, 65535, 87}, },
            {{32, 58, 90}, {60, 127, 90}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 81, -16}, {82, 82, 91}, {83, 113, -16}, {114, 114, 92}, {115, 122, 49}, },
            {{48, 122, -52}, },
            {{48, 78, -17}, {79, 79, 93}, {80, 110, -29}, {111, 111, 94}, {112, 122, 49}, },
            {{48, 57, 48}, {65, 83, 49}, {84, 84, 95}, {85, 115, -25}, {116, 116, 96}, {117, 122, 49}, },
            {{48, 122, -54}, },
            {{48, 122, -55}, },
            {{48, 57, 48}, {65, 65, 97}, {66, 95, -28}, {97, 97, 98}, {98, 122, 49}, },
            {{48, 122, -58}, },
            {{48, 83, -55}, {84, 84, 99}, {85, 115, -25}, {116, 116, 100}, {117, 122, 49}, },
            {{48, 77, -20}, {78, 78, 101}, {79, 109, -20}, {110, 110, 102}, {111, 122, 49}, },
            {{48, 78, -17}, {79, 79, 103}, {80, 110, -29}, {111, 111, 104}, {112, 122, 49}, },
            {{48, 122, -60}, },
            {{48, 122, -61}, },
            {{48, 122, -62}, },
            {{48, 67, -27}, {68, 68, 105}, {69, 99, -27}, {100, 100, 106}, {101, 122, 49}, },
            {{48, 122, -66}, },
            {{48, 83, -55}, {84, 84, 107}, {85, 115, -25}, {116, 116, 108}, {117, 122, 49}, },
            {{48, 122, -68}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 57, 48}, {65, 65, 109}, {66, 95, -28}, {97, 97, 110}, {98, 122, 49}, },
            {{48, 122, -72}, },
            {{48, 83, -55}, {84, 84, 111}, {85, 115, -25}, {116, 116, 112}, {117, 122, 49}, },
            {{48, 81, -16}, {82, 82, 113}, {83, 113, -16}, {114, 114, 114}, {115, 122, 49}, },
            {{48, 122, -75}, },
            {{48, 57, 48}, {65, 76, 49}, {77, 77, 115}, {78, 90, 49}, {95, 95, 49}, {97, 108, 49}, {109, 109, 116}, {110, 122, 49}, },
            {{48, 122, -77}, },
            {{48, 83, -55}, {84, 84, 117}, {85, 115, -25}, {116, 116, 118}, {117, 122, 49}, },
            {{48, 122, -79}, },
            {{48, 81, -16}, {82, 82, 119}, {83, 113, -16}, {114, 114, 120}, {115, 122, 49}, },
            {{48, 122, -81}, },
            {{48, 81, -16}, {82, 82, 121}, {83, 113, -16}, {114, 114, 122}, {115, 122, 49}, },
            {{48, 122, -83}, },
            {{0, 41, -46}, {42, 42, 123}, {43, 65535, 83}, },
            {{0, 65535, -85}, },
            {{0, 9, 83}, {10, 10, 124}, {11, 65535, -85}, },
            {{0, 9, 125}, {10, 10, 126}, {11, 12, 125}, {13, 13, 127}, {14, 40, 125}, {41, 41, 128}, {42, 42, 129}, {43, 65535, 125}, },
            {{0, 65535, -48}, },
            {},
            {{10, 10, 130}, },
            {{32, 127, -49}, },
            {{48, 57, 48}, {65, 65, 131}, {66, 95, -28}, {97, 97, 132}, {98, 122, 49}, },
            {{48, 122, -93}, },
            {{48, 57, 48}, {65, 75, 49}, {76, 76, 133}, {77, 90, 49}, {95, 95, 49}, {97, 107, 49}, {108, 108, 134}, {109, 122, 49}, },
            {{48, 122, -95}, },
            {{48, 68, -24}, {69, 69, 135}, {70, 100, -24}, {101, 101, 136}, {102, 122, 49}, },
            {{48, 122, -97}, },
            {{48, 81, -16}, {82, 82, 137}, {83, 113, -16}, {114, 114, 138}, {115, 122, 49}, },
            {{48, 122, -99}, },
            {{48, 68, -24}, {69, 69, 139}, {70, 100, -24}, {101, 101, 140}, {102, 122, 49}, },
            {{48, 122, -101}, },
            {{48, 83, -55}, {84, 84, 141}, {85, 115, -25}, {116, 116, 142}, {117, 122, 49}, },
            {{48, 122, -103}, },
            {{48, 81, -16}, {82, 82, 143}, {83, 113, -16}, {114, 114, 144}, {115, 122, 49}, },
            {{48, 122, -105}, },
            {{48, 90, -21}, {95, 95, 145}, {97, 122, 49}, },
            {{48, 122, -107}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 75, -95}, {76, 76, 146}, {77, 107, -95}, {108, 108, 147}, {109, 122, 49}, },
            {{48, 122, -111}, },
            {{48, 72, -26}, {73, 73, 148}, {74, 104, -26}, {105, 105, 149}, {106, 122, 49}, },
            {{48, 122, -113}, },
            {{48, 72, -26}, {73, 73, 150}, {74, 84, 49}, {85, 85, 151}, {86, 90, 49}, {95, 104, -26}, {105, 105, 152}, {106, 116, 49}, {117, 117, 153}, {118, 122, 49}, },
            {{48, 122, -115}, },
            {{48, 68, -24}, {69, 69, 154}, {70, 100, -24}, {101, 101, 155}, {102, 122, 49}, },
            {{48, 122, -117}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 67, -27}, {68, 68, 156}, {69, 99, -27}, {100, 100, 157}, {101, 122, 49}, },
            {{48, 122, -123}, },
            {{0, 9, 158}, {10, 10, 159}, {11, 12, 158}, {13, 13, 160}, {14, 40, 158}, {41, 41, 161}, {42, 42, 123}, {43, 65535, 158}, },
            {{0, 65535, -85}, },
            {{0, 9, 162}, {10, 10, 163}, {11, 12, 162}, {13, 13, 164}, {14, 41, 162}, {42, 42, 165}, {43, 65535, 162}, },
            {{0, 65535, -127}, },
            {{0, 9, 162}, {10, 10, 166}, {11, 65535, -127}, },
            {},
            {{0, 65535, -88}, },
            {},
            {{48, 57, 48}, {65, 88, 49}, {89, 89, 167}, {90, 95, -17}, {97, 120, 49}, {121, 121, 168}, {122, 122, 49}, },
            {{48, 122, -133}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 90, -21}, {95, 95, 169}, {97, 122, 49}, },
            {{48, 122, -141}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 67, -27}, {68, 68, 170}, {69, 99, -27}, {100, 100, 171}, {101, 122, 49}, },
            {{48, 122, -145}, },
            {{48, 57, 48}, {65, 82, 49}, {83, 83, 172}, {84, 90, 49}, {95, 95, 49}, {97, 114, 49}, {115, 115, 173}, {116, 122, 49}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 76, -77}, {77, 77, 174}, {78, 108, -77}, {109, 109, 175}, {110, 122, 49}, },
            {{48, 122, -150}, },
            {{48, 77, -20}, {78, 78, 176}, {79, 109, -20}, {110, 110, 177}, {111, 122, 49}, },
            {{48, 57, 48}, {65, 66, 49}, {67, 67, 178}, {68, 90, 49}, {95, 95, 49}, {97, 98, 49}, {99, 99, 179}, {100, 122, 49}, },
            {{48, 122, -152}, },
            {{48, 122, -153}, },
            {{48, 90, -21}, {95, 95, 180}, {97, 122, 49}, },
            {{48, 122, -156}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{0, 9, 181}, {10, 10, 182}, {11, 12, 181}, {13, 13, 183}, {14, 41, 181}, {42, 42, 184}, {43, 65535, 181}, },
            {{0, 65535, -160}, },
            {{0, 9, 181}, {10, 10, 185}, {11, 65535, -160}, },
            {},
            {{0, 65535, -127}, },
            {{0, 65535, -127}, },
            {{0, 9, 162}, {10, 10, 186}, {11, 65535, -127}, },
            {{0, 41, -88}, {42, 42, 165}, {43, 65535, 125}, },
            {{0, 65535, -127}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 57, 48}, {65, 65, 187}, {66, 95, -28}, {97, 97, 188}, {98, 122, 49}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 83, -55}, {84, 84, 189}, {85, 115, -25}, {116, 116, 190}, {117, 122, 49}, },
            {{48, 122, -174}, },
            {{48, 68, -24}, {69, 69, 191}, {70, 100, -24}, {101, 101, 192}, {102, 122, 49}, },
            {{48, 122, -176}, },
            {{48, 57, 48}, {65, 70, 49}, {71, 71, 193}, {72, 90, 49}, {95, 95, 49}, {97, 102, 49}, {103, 103, 194}, {104, 122, 49}, },
            {{48, 122, -178}, },
            {{48, 83, -55}, {84, 84, 195}, {85, 115, -25}, {116, 116, 196}, {117, 122, 49}, },
            {{48, 122, -180}, },
            {{48, 78, -17}, {79, 79, 197}, {80, 110, -29}, {111, 111, 198}, {112, 122, 49}, },
            {{0, 65535, -160}, },
            {{0, 65535, -160}, },
            {{0, 9, 181}, {10, 10, 199}, {11, 65535, -160}, },
            {{0, 41, -125}, {42, 42, 184}, {43, 65535, 158}, },
            {{0, 65535, -160}, },
            {{0, 65535, -127}, },
            {{48, 77, -20}, {78, 78, 200}, {79, 109, -20}, {110, 110, 201}, {111, 122, 49}, },
            {{48, 122, -189}, },
            {{48, 81, -16}, {82, 82, 202}, {83, 113, -16}, {114, 114, 203}, {115, 122, 49}, },
            {{48, 122, -191}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 69, -23}, {70, 70, 204}, {71, 101, -23}, {102, 102, 205}, {103, 122, 49}, },
            {{48, 122, -199}, },
            {{0, 65535, -160}, },
            {{48, 67, -27}, {68, 68, 206}, {69, 99, -27}, {100, 100, 207}, {101, 122, 49}, },
            {{48, 122, -202}, },
            {{48, 57, 48}, {65, 84, 49}, {85, 85, 208}, {86, 95, -115}, {97, 116, 49}, {117, 117, 209}, {118, 122, 49}, },
            {{48, 122, -204}, },
            {{48, 90, -21}, {95, 95, 210}, {97, 122, 49}, },
            {{48, 122, -206}, },
            {{48, 90, -21}, {95, 95, 211}, {97, 122, 49}, },
            {{48, 122, -208}, },
            {{48, 66, -153}, {67, 67, 212}, {68, 98, -153}, {99, 99, 213}, {100, 122, 49}, },
            {{48, 122, -210}, },
            {{48, 67, -27}, {68, 68, 214}, {69, 99, -27}, {100, 100, 215}, {101, 122, 49}, },
            {{48, 83, -55}, {84, 84, 216}, {85, 115, -25}, {116, 116, 217}, {117, 122, 49}, },
            {{48, 83, -55}, {84, 84, 218}, {85, 115, -25}, {116, 116, 219}, {117, 122, 49}, },
            {{48, 122, -214}, },
            {{48, 57, 48}, {65, 65, 220}, {66, 95, -28}, {97, 97, 221}, {98, 122, 49}, },
            {{48, 122, -216}, },
            {{48, 72, -26}, {73, 73, 222}, {74, 104, -26}, {105, 105, 223}, {106, 122, 49}, },
            {{48, 122, -218}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 88, -133}, {89, 89, 224}, {90, 120, -133}, {121, 121, 225}, {122, 122, 49}, },
            {{48, 122, -222}, },
            {{48, 76, -77}, {77, 77, 226}, {78, 108, -77}, {109, 109, 227}, {110, 122, 49}, },
            {{48, 122, -224}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
            {{48, 68, -24}, {69, 69, 228}, {70, 100, -24}, {101, 101, 229}, {102, 122, 49}, },
            {{48, 122, -228}, },
            {{48, 122, -21}, },
            {{48, 122, -21}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 36, 36, 36, 36, 25, 26, 30, 20, 23, -1, 31, 21, 22, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 27, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 36, -1, 24, 34, 35, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 19, 19, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, -1, -1, -1, -1, 34, 34, 34, 35, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 8, 8, 29, 29, 29, 29, 29, 29, 29, 29, 12, 12, 2, 2, 29, 29, -1, -1, -1, -1, -1, 33, -1, 34, 29, 29, 3, 3, 4, 4, 5, 5, 16, 16, 9, 9, 29, 29, 29, 10, 10, 29, 29, 29, 29, 29, 29, 14, 14, 6, 6, -1, -1, -1, 32, -1, -1, -1, -1, -1, 18, 18, 29, 7, 7, 29, 29, 29, 29, 29, 29, 29, 29, 29, -1, -1, -1, -1, -1, -1, 29, 29, 29, 29, 13, 13, 11, 11, 0, 0, 29, 29, -1, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 1, 1, 29, 29, 29, 29, 15, 15, 29, 29, 17, 17, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
