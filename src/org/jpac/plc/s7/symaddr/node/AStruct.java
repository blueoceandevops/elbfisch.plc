/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.jpac.plc.s7.symaddr.node;

import org.jpac.plc.s7.symaddr.analysis.*;

@SuppressWarnings("nls")
public final class AStruct extends PStruct
{
    private TStructsym _structsym_;
    private PVariablesDefinitionList _variablesDefinitionList_;
    private TStructendsym _structendsym_;

    public AStruct()
    {
        // Constructor
    }

    public AStruct(
        @SuppressWarnings("hiding") TStructsym _structsym_,
        @SuppressWarnings("hiding") PVariablesDefinitionList _variablesDefinitionList_,
        @SuppressWarnings("hiding") TStructendsym _structendsym_)
    {
        // Constructor
        setStructsym(_structsym_);

        setVariablesDefinitionList(_variablesDefinitionList_);

        setStructendsym(_structendsym_);

    }

    @Override
    public Object clone()
    {
        return new AStruct(
            cloneNode(this._structsym_),
            cloneNode(this._variablesDefinitionList_),
            cloneNode(this._structendsym_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStruct(this);
    }

    public TStructsym getStructsym()
    {
        return this._structsym_;
    }

    public void setStructsym(TStructsym node)
    {
        if(this._structsym_ != null)
        {
            this._structsym_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._structsym_ = node;
    }

    public PVariablesDefinitionList getVariablesDefinitionList()
    {
        return this._variablesDefinitionList_;
    }

    public void setVariablesDefinitionList(PVariablesDefinitionList node)
    {
        if(this._variablesDefinitionList_ != null)
        {
            this._variablesDefinitionList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._variablesDefinitionList_ = node;
    }

    public TStructendsym getStructendsym()
    {
        return this._structendsym_;
    }

    public void setStructendsym(TStructendsym node)
    {
        if(this._structendsym_ != null)
        {
            this._structendsym_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._structendsym_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._structsym_)
            + toString(this._variablesDefinitionList_)
            + toString(this._structendsym_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._structsym_ == child)
        {
            this._structsym_ = null;
            return;
        }

        if(this._variablesDefinitionList_ == child)
        {
            this._variablesDefinitionList_ = null;
            return;
        }

        if(this._structendsym_ == child)
        {
            this._structendsym_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._structsym_ == oldChild)
        {
            setStructsym((TStructsym) newChild);
            return;
        }

        if(this._variablesDefinitionList_ == oldChild)
        {
            setVariablesDefinitionList((PVariablesDefinitionList) newChild);
            return;
        }

        if(this._structendsym_ == oldChild)
        {
            setStructendsym((TStructendsym) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
