/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.jpac.plc.s7.symaddr.analysis;

import java.util.*;
import org.jpac.plc.s7.symaddr.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAVarDatatype(AVarDatatype node)
    {
        defaultCase(node);
    }

    public void caseAStructDatatype(AStructDatatype node)
    {
        defaultCase(node);
    }

    public void caseAVar(AVar node)
    {
        defaultCase(node);
    }

    public void caseAStruct(AStruct node)
    {
        defaultCase(node);
    }

    public void caseASingleVariablesDefinitionList(ASingleVariablesDefinitionList node)
    {
        defaultCase(node);
    }

    public void caseAMultipleVariablesDefinitionList(AMultipleVariablesDefinitionList node)
    {
        defaultCase(node);
    }

    public void caseAVariablesTypeAssignment(AVariablesTypeAssignment node)
    {
        defaultCase(node);
    }

    public void caseAVariablesDefinition(AVariablesDefinition node)
    {
        defaultCase(node);
    }

    public void caseASingleIdentifierList(ASingleIdentifierList node)
    {
        defaultCase(node);
    }

    public void caseAMultipleIdentifierList(AMultipleIdentifierList node)
    {
        defaultCase(node);
    }

    public void caseASignednumber(ASignednumber node)
    {
        defaultCase(node);
    }

    public void caseAArraydim(AArraydim node)
    {
        defaultCase(node);
    }

    public void caseAAdditionalarraydim(AAdditionalarraydim node)
    {
        defaultCase(node);
    }

    public void caseASingleArraydimList(ASingleArraydimList node)
    {
        defaultCase(node);
    }

    public void caseAMultipleArraydimList(AMultipleArraydimList node)
    {
        defaultCase(node);
    }

    public void caseAArraydecl(AArraydecl node)
    {
        defaultCase(node);
    }

    public void caseAStringdecl(AStringdecl node)
    {
        defaultCase(node);
    }

    public void caseABoolType(ABoolType node)
    {
        defaultCase(node);
    }

    public void caseAByteType(AByteType node)
    {
        defaultCase(node);
    }

    public void caseACharType(ACharType node)
    {
        defaultCase(node);
    }

    public void caseAWordType(AWordType node)
    {
        defaultCase(node);
    }

    public void caseADwordType(ADwordType node)
    {
        defaultCase(node);
    }

    public void caseAIntType(AIntType node)
    {
        defaultCase(node);
    }

    public void caseADintType(ADintType node)
    {
        defaultCase(node);
    }

    public void caseARealType(ARealType node)
    {
        defaultCase(node);
    }

    public void caseAStringType(AStringType node)
    {
        defaultCase(node);
    }

    public void caseAUdtType(AUdtType node)
    {
        defaultCase(node);
    }

    public void caseAS5timeType(AS5timeType node)
    {
        defaultCase(node);
    }

    public void caseATimeType(ATimeType node)
    {
        defaultCase(node);
    }

    public void caseATimeofdayType(ATimeofdayType node)
    {
        defaultCase(node);
    }

    public void caseADateType(ADateType node)
    {
        defaultCase(node);
    }

    public void caseADateandtimeType(ADateandtimeType node)
    {
        defaultCase(node);
    }

    public void caseAArrayType(AArrayType node)
    {
        defaultCase(node);
    }

    public void caseAStructType(AStructType node)
    {
        defaultCase(node);
    }

    public void caseTStructsym(TStructsym node)
    {
        defaultCase(node);
    }

    public void caseTStructendsym(TStructendsym node)
    {
        defaultCase(node);
    }

    public void caseTVarsym(TVarsym node)
    {
        defaultCase(node);
    }

    public void caseTBool(TBool node)
    {
        defaultCase(node);
    }

    public void caseTByte(TByte node)
    {
        defaultCase(node);
    }

    public void caseTChar(TChar node)
    {
        defaultCase(node);
    }

    public void caseTWord(TWord node)
    {
        defaultCase(node);
    }

    public void caseTDword(TDword node)
    {
        defaultCase(node);
    }

    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    public void caseTDint(TDint node)
    {
        defaultCase(node);
    }

    public void caseTReal(TReal node)
    {
        defaultCase(node);
    }

    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    public void caseTUdt(TUdt node)
    {
        defaultCase(node);
    }

    public void caseTS5time(TS5time node)
    {
        defaultCase(node);
    }

    public void caseTTime(TTime node)
    {
        defaultCase(node);
    }

    public void caseTTimeofday(TTimeofday node)
    {
        defaultCase(node);
    }

    public void caseTDate(TDate node)
    {
        defaultCase(node);
    }

    public void caseTDateandtime(TDateandtime node)
    {
        defaultCase(node);
    }

    public void caseTArray(TArray node)
    {
        defaultCase(node);
    }

    public void caseTOf(TOf node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    public void caseTDotdot(TDotdot node)
    {
        defaultCase(node);
    }

    public void caseTLParen(TLParen node)
    {
        defaultCase(node);
    }

    public void caseTRParen(TRParen node)
    {
        defaultCase(node);
    }

    public void caseTLSquarebracket(TLSquarebracket node)
    {
        defaultCase(node);
    }

    public void caseTRSquarebracket(TRSquarebracket node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTSign(TSign node)
    {
        defaultCase(node);
    }

    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    public void caseTTraditionalComment(TTraditionalComment node)
    {
        defaultCase(node);
    }

    public void caseTDocumentationComment(TDocumentationComment node)
    {
        defaultCase(node);
    }

    public void caseTEndOfLineComment(TEndOfLineComment node)
    {
        defaultCase(node);
    }

    public void caseTIntialization(TIntialization node)
    {
        defaultCase(node);
    }

    public void caseTBlanks(TBlanks node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
